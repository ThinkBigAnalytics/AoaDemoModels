# AoA Demo Models Azure Pipeline

trigger:
  - master

variables:
  dockerConnection: 'dockerhub-dartov'
  gogsBaseImage: 'thinkbiganalytics/aoa-gogs-base:0.0.3'
  newImageRepo: 'thinkbiganalytics/aoa-demomodels'
  newImageVersion: '2.7.0.rc0'

resources:
  containers:
    - container: 'aoa-demo-models'
      image: ${{variables.gogsBaseImage}}
      endpoint: ${{variables.dockerConnection}}
      ports:
        - "3000:3000"
#  repositories:
#    - repository: 'aoa-demo-models-repo'
#      type: github
#      name: 'ThinkBigAnalytics/AoaDemoModels'
#      endpoint: github-dartov

stages:
  - stage: SetupGitRepo
    displayName: 'Setup git repo'
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: BuildPushDocker
        displayName: 'Build and push docker image'
        services:
          aoa-demo-models: aoa-demo-models
#          aoa-demo-models-repo: aoa-demo-models-repo
        steps:
          - script: |
              ls -lisha
              echo $(Build.BuildNumber)
              git status
              git branch
              git remote show
              git rev-parse --show-toplevel
              docker ps
              docker images
              docker ps -aqf "ancestor=$(gogsBaseImage)"
            displayName: 'Check environment'
          - script: |
              export MAIN_REPO=$PWD
              echo $MAIN_REPO
              cd ..
              export WORKING_DIR=$PWD
              export NEW_REPO="${WORKING_DIR}/AoaDemoModels/"
              echo $WORKING_DIR
              echo $NEW_REPO
              git clone http://gituser:gitpassword@localhost:3000/gituser/AoaDemoModels
              rsync -avrI --exclude=".git" "${MAIN_REPO}/" $NEW_REPO
              ls -lisha
              cd AoaDemoModels
              echo $PWD
              ls -lisha
              git status
              git branch
              git remote show
              git rev-parse --show-toplevel
              git config --global user.email "analytics.ops@azure.pipelines.com"
              git config --global user.name "AnalyticsOps"
              git add .
              git commit -m "Updating demo models build $(Build.BuildNumber)"
              git push
              git status
              git log
            displayName: 'Update AOA Demo Models repo'
          - task: InstallSSHKey@0
            displayName: 'Install ssh keys'
            inputs:
              knownHostsEntry: 140.82.114.4 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
              sshPublicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKQBD5kNe/TxXxnL+etCyM6dPv5oLezRJJVSVbv8z4ghtxsSgJmh5v2HhtPLSbAxgRtLOKj1IX8KliXdR6MQzTfVidcpaDCQaLP9/qg7kUx26Wv3/1GzEt6c8QgtLyjsJ1VLbjkprAQCL8OTDOjhUFL3y0Vefw26dTwqGjC8WvrzRQml8ziEwa2bkFfKdb2KqVnZ7MgT3rG9Ie4IdqASlQVMqyso91AELBqFMeKXQ7EZ5BKMkebnjFAHerpNumxl2CBnto5YbTgbqBmyzoJ51XM+REvcZOU3x2wTbTsPq5DXPA3kYFteASIHdggIJv5SmpCIKzSxCuByyt9bDsmQ/KylvlmW+F1wyQFseRMbtW1YlEcDec+M7c5c4kBnN8u35UdHgg1QTKsMcZ7o84Y6v7WR7iIJ8lY83oBRVPznRT9y7O2tchTWDkP+P5llmuers+6RYiYbXfnyLXKFNJF3HfKqcOHhJe/toIekv2cb5/D+RhNiTk/eu1PR8NjQ28B7QgK9Yy8/PP5bl95+6mu7TqTe1VaUTRPE/dSCWExc8mM5Zhw9MqJ5g8b96I1W24y71QJMKO+ZOcre9hrychR5vi9/8RBqRTUG0KvrMO6QKWwEee+zkY2oaQ9hfjAQXF7CLv+8XbGB42/c96jDqHBXy+VAuaGbhPCEZ+VDIcPPH+Jw== christianaxel.schmidt@teradata.com
              sshKeySecureFile: 'td_id_rsa'
          - task: CmdLine@2
            displayName: 'Clone AoaFraudIndustryPack'
            inputs:
              script: 'git clone git@github.com:ThinkBigAnalytics/AoaFraudIndustryPack.git'
          - script: |
              export REPO_NAME=AoaFraudIndustryPack
              export MAIN_REPO=$PWD
              echo $MAIN_REPO
              cd ..
              export WORKING_DIR=$PWD
              export NEW_REPO="${WORKING_DIR}/${REPO_NAME}/"
              echo $WORKING_DIR
              echo $NEW_REPO
              git clone http://gituser:gitpassword@localhost:3000/gituser/${REPO_NAME}
              rsync -avrI --exclude=".git" "${MAIN_REPO}/${REPO_NAME}/" $NEW_REPO
              ls -lisha
              cd ${REPO_NAME}
              echo $PWD
              ls -lisha
              git status
              git branch
              git remote show
              git rev-parse --show-toplevel
              git config --global user.email "analytics.ops@azure.pipelines.com"
              git config --global user.name "AnalyticsOps"
              git add .
              git commit -m "Updating ${REPO_NAME} build $(Build.BuildNumber)"
              git push
              git status
              git log
              rm -fr ${MAIN_REPO}/${REPO_NAME}
              ls -lisha ${MAIN_REPO}
            displayName: 'Update AoaFraudIndustryPack repo'
          - task: CmdLine@2
            displayName: 'Clone AoaSmartCitiesIndustryPack'
            inputs:
              script: 'git clone git@github.com:ThinkBigAnalytics/AoaSmartCitiesIndustryPack.git'
          - script: |
              export REPO_NAME=AoaSmartCitiesIndustryPack
              export MAIN_REPO=$PWD
              echo $MAIN_REPO
              cd ..
              export WORKING_DIR=$PWD
              export NEW_REPO="${WORKING_DIR}/${REPO_NAME}/"
              echo $WORKING_DIR
              echo $NEW_REPO
              git clone http://gituser:gitpassword@localhost:3000/gituser/${REPO_NAME}
              rsync -avrI --exclude=".git" "${MAIN_REPO}/${REPO_NAME}/" $NEW_REPO
              ls -lisha
              cd ${REPO_NAME}
              echo $PWD
              ls -lisha
              git status
              git branch
              git remote show
              git rev-parse --show-toplevel
              git config --global user.email "analytics.ops@azure.pipelines.com"
              git config --global user.name "AnalyticsOps"
              git add .
              git commit -m "Updating ${REPO_NAME} build $(Build.BuildNumber)"
              git push
              git status
              git log
              rm -fr ${MAIN_REPO}/${REPO_NAME}
              ls -lisha ${MAIN_REPO}
            displayName: 'Update AoaSmartCitiesIndustryPack repo'
#          - task: CmdLine@2
#            displayName: 'Clone AoaJbpmModelLifecycle'
#            inputs:
#              script: 'git clone git@github.com:ThinkBigAnalytics/AoaJbpmModelLifecycle.git'
#          - script: |
#              export REPO_NAME=AoaJbpmModelLifecycle
#              export MAIN_REPO=$PWD
#              echo $MAIN_REPO
#              cd ..
#              export WORKING_DIR=$PWD
#              export NEW_REPO="${WORKING_DIR}/${REPO_NAME}/"
#              echo $WORKING_DIR
#              echo $NEW_REPO
#              git clone http://gituser:gitpassword@localhost:3000/gituser/${REPO_NAME}
#              rsync -avrI --exclude=".git" "${MAIN_REPO}/${REPO_NAME}/" $NEW_REPO
#              ls -lisha
#              cd ${REPO_NAME}
#              echo $PWD
#              ls -lisha
#              git status
#              git branch
#              git remote show
#              git rev-parse --show-toplevel
#              git config --global user.email "analytics.ops@azure.pipelines.com"
#              git config --global user.name "AnalyticsOps"
#              git add .
#              git commit -m "Updating ${REPO_NAME} build $(Build.BuildNumber)"
#              git push
#              git status
#              git log
#              rm -fr ${MAIN_REPO}/${REPO_NAME}
#              ls -lisha ${MAIN_REPO}
#            displayName: 'Update AoaJbpmModelLifecycle repo'
          - script: |
              pwd
              ls -lisha
              cd
              ls -lisha
            displayName: 'Check repos downloaded'
          - script: |
              cd ../AoaDemoModels
              git log
              git status
              cd ..
              ls -lisha
              export DOCKER_IMAGE=$(docker ps -aqf "ancestor=$(gogsBaseImage)")
              docker cp $DOCKER_IMAGE:/data/ backup
              echo "$(Build.BuildNumber)" > backup/build.txt
              ls -lisha backup
              echo Show contents of container aoa-backup before
              docker exec $DOCKER_IMAGE ls -lisha /aoa-backup
              docker cp backup/. $DOCKER_IMAGE:/aoa-backup
              echo Show contents of container aoa-backup after
              docker exec $DOCKER_IMAGE ls -lisha /aoa-backup
              ls -lisha backup
              docker ps
              docker images
              docker commit $DOCKER_IMAGE $(newImageRepo):$(newImageVersion)
              docker images
            displayName: 'Commit docker image'
          - task: Docker@2
            displayName: 'Push docker image'
            inputs:
              command: push
              containerRegistry: '$(dockerConnection)'
              repository: '$(newImageRepo)'
              tags: '$(newImageVersion)'
